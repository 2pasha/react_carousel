{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","currentIndex","setCurrentIndex","className","style","width","height","transform","transitionDuration","map","image","src","alt","type","onClick","length","prevIndex","disabled","maxTransition","App","state","handleInputChange","event","target","name","value","setState","Error","this","htmlFor","id","onChange","min","max","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8245c68a.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const handleNextClick = () => {\n    const maxTransition = images.length * itemWidth - frameSize * itemWidth;\n\n    if (infinite && currentIndex <= -maxTransition) {\n      setCurrentIndex(frameSize * itemWidth);\n    }\n\n    setCurrentIndex(prevIndex => (\n      prevIndex - step * itemWidth < -maxTransition\n        ? -maxTransition\n        : prevIndex - step * itemWidth\n    ));\n  };\n\n  const handlePrevClick = () => {\n    if (infinite && currentIndex >= 0) {\n      setCurrentIndex(-(images.length * itemWidth));\n    }\n\n    setCurrentIndex(prevIndex => (\n      prevIndex + step * itemWidth > 0\n        ? 0\n        : prevIndex + step * itemWidth\n    ));\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div\n        className=\"Carousel__wrap\"\n        style={{\n          width: `${itemWidth * frameSize}px`,\n          height: '100%',\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translate(${currentIndex}px)`,\n            transitionDuration: `${animationDuration}ms`,\n          }}\n        >\n          {images.map(image => (\n            <li\n              key={image}\n              style={{ height: '100%' }}\n            >\n              <img\n                src={image}\n                alt={image}\n                style={{ width: `${itemWidth}px` }}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          className=\"Carousel__button\"\n          type=\"button\"\n          onClick={handlePrevClick}\n          disabled={!infinite && currentIndex === 0}\n        >\n          Prev\n        </button>\n\n        <button\n          className=\"Carousel__button\"\n          type=\"button\"\n          onClick={handleNextClick}\n          data-cy=\"next\"\n          disabled={\n            !infinite\n            && currentIndex === itemWidth * (frameSize - images.length)\n          }\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\n\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'itemWidth':\n        this.setState({ [name]: +value });\n\n        break;\n\n      case 'frameSize':\n        this.setState({ [name]: +value });\n\n        break;\n\n      case 'animationDuration':\n        this.setState({ [name]: +value });\n\n        break;\n\n      case 'step':\n        this.setState({ [name]: +value });\n\n        break;\n\n      case 'infinite':\n        this.setState(state => ({\n          [name]: !state.infinite,\n        }));\n\n        break;\n\n      default:\n        throw new Error('Something wrong');\n    }\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <form className=\"App__form\">\n          <label\n            className=\"App__field\"\n            htmlFor=\"itemId\"\n          >\n            Item width:\n            <input\n              id=\"itemId\"\n              className=\"App__input\"\n              type=\"number\"\n              name=\"itemWidth\"\n              onChange={this.handleInputChange}\n              value={itemWidth}\n            />\n          </label>\n\n          <label\n            className=\"App__field\"\n            htmlFor=\"frameId\"\n          >\n            Frame size:\n            <input\n              id=\"frameId\"\n              className=\"App__input\"\n              type=\"number\"\n              name=\"frameSize\"\n              min={1}\n              max={images.length}\n              onChange={this.handleInputChange}\n              value={frameSize}\n            />\n          </label>\n\n          <label className=\"App__field\">\n            Animation duration:\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              name=\"animationDuration\"\n              onChange={this.handleInputChange}\n              value={animationDuration}\n            />\n          </label>\n\n          <label\n            className=\"App__field\"\n            htmlFor=\"stepId\"\n          >\n            Step:\n            <input\n              id=\"stepId\"\n              className=\"App__input\"\n              type=\"number\"\n              name=\"step\"\n              min={1}\n              max={images.length}\n              onChange={this.handleInputChange}\n              value={step}\n            />\n          </label>\n\n          <label className=\"App__field\">\n            Infinite:\n            <input\n              className=\"App__input\"\n              type=\"checkbox\"\n              name=\"infinite\"\n              onChange={this.handleInputChange}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}